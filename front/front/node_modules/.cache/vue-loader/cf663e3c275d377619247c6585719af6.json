{"remainingRequest":"C:\\Users\\李龙\\Desktop\\graduation\\front\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\李龙\\Desktop\\graduation\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\李龙\\Desktop\\graduation\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\李龙\\Desktop\\graduation\\front\\front\\src\\pages\\home\\home.vue?vue&type=template&id=166122ec&scoped=true&","dependencies":[{"path":"C:\\Users\\李龙\\Desktop\\graduation\\front\\front\\src\\pages\\home\\home.vue","mtime":1710751149644},{"path":"C:\\Users\\李龙\\Desktop\\graduation\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\李龙\\Desktop\\graduation\\front\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\李龙\\Desktop\\graduation\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\李龙\\Desktop\\graduation\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}